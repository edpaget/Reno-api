(java.security.Security/getProviders)
(System)
(doc System)
(if (= 0 0) 1 0)
(use '[reno-2.projects :only [build]])
(build "https://github.com/zooniverse/Serengeti/tarball/master" "ubret/test-serengeti")
(build {:s3-bucket "ubret/test-serengeti/"} {:s3-url "https://github.com/zooniverse/Serengeti/tarball/master"})
(use '[reno-2.projects :only [build]])
(build {:s3-bucket "ubret/test-serengeti/"} {:s3-url "https://github.com/zooniverse/Serengeti/tarball/master"})
(build {:type "hem" :s3-bucket "ubret/test-serengeti/"} {:s3-url "https://github.com/zooniverse/Serengeti/tarball/master"})
(def build-progress *1)
build-progress
(recieved? build-progress)
(realized? build-progress)
@build-progress
(use '[reno-2.projects :only [build]] :reload)
(def builder (build {:type "hem" :s3-bucket "ubret/test-serengeti/"} {:s3-url "https://github.com/zooniverse/Serengeti/tarball/master"}))
(realized? builder)
(use '[reno-2.projects :only [build]] :reload)
(def builder (build {:type "hem" :s3-bucket "ubret/test-serengeti/"} {:s3-url "https://github.com/zooniverse/Serengeti/tarball/master"}))
(realized? builder)
(use '[reno-2.projects :only [build]] :reload)
(def builder (build {:type "hem" :s3-bucket "ubret/test-serengeti/"} {:s3-url "https://github.com/zooniverse/Serengeti/tarball/master"}))
builder
(use '[reno-2.projects :only [build]] :reload)
(def builder (build {:type "hem" :s3-bucket "ubret/test-serengeti/"} {:s3-url "https://github.com/zooniverse/Serengeti/tarball/master"}))
(use '[reno-2.projects :only [build]] :reload)
(def builder (build {:type "hem" :s3-bucket "ubret/test-serengeti/"} {:s3-url "https://github.com/zooniverse/Serengeti/tarball/master"}))
builder
(def builder (build {:type "hem" :s3-bucket "ubret/test-serengeti/"} {:s3-url "https://github.com/zooniverse/Serengeti/tarball/master"}))
(use '[reno-2.projects :only [build]] :reload)
(def builder (build {:type "hem" :s3-bucket "ubret/test-serengeti/"} {:s3-url "https://github.com/zooniverse/Serengeti/tarball/master"}))
builder
(use '[reno-2.projects :only [build]] :reload)
(def builder (build {:type "hem" :s3-bucket "ubret/test-serengeti/"} {:s3-url "https://github.com/zooniverse/Serengeti/tarball/master"}))
builder
(require `[container-ship.core :as cs])
(cs/create-container ["./build/build.sh "http://github.com/zooniverse/Serengeti/tarball/master" "ubret/test-serengeti"] "edpaget/hem-build")
"
)
(cs/create-container ["./build/build.sh" "http://github.com/zooniverse/Serengeti/tarball/master" "ubret/test-serengeti"] "edpaget/hem-build")
cs
(require `[container-ship.core :as cs])
(cs/create-container ["./build/build.sh" "http://github.com/zooniverse/Serengeti/tarball/master" "ubret/test-serengeti"] "edpaget/hem-build")
(require `[container-ship.core :as cc])
(cc/create-container ["./build/build.sh" "http://github.com/zooniverse/Serengeti/tarball/master" "ubret/test-serengeti"] "edpaget/hem-build")
(require `[container-ship.core :as cc])
(cc/create-container ["./build/build.sh" "http://github.com/zooniverse/Serengeti/tarball/master" "ubret/test-serengeti"] "edpaget/hem-build")
(use `[container-ship.core :only [create-container]])
(require '[container-ship.core :as cc])
(cc/create-container ["./build/build.sh" "http://github.com/zooniverse/Serengeti/tarball/master" "ubret/test-serengeti"] "edpaget/hem-build")
(cc/start-container (:Id *1))
(cc/create-container ["./build/build.sh" "http://github.com/zooniverse/Serengeti/tarball/master" "ubret/test-serengeti"] "edpaget/hem-build")
(:Id *1)
(require '[clj-http.client :as client])
(client/get "http://localhost:4243/containers/1bd72e2d63e9/start")
(client/post "http://localhost:4243/containers/1bd72e2d63e9/start")
(use '[container-ship.core :only [container containers]])
(containers)
(container "1bd72e2d63e9")
(container "502f3f29c45b")
(container "b19bd7392469b")
(container "b19bd739246b")
(container "b19bd7e9246b")
(use 'container-ship.core)
(attach-container "502f3f29c45b")
(container "502f3f29c45b")
(container-attach "502f3f29c45b")
(require '[clj-http.client :as client])
(:body (client/get "http://localhost:4243/containers/502f3f29c45b/attach?logs=1&stream=1&stdout=1" {:as :stream}))
(start-container "502f3f29c45b")
(:body (client/get "http://localhost:4243/containers/502f3f29c45b/attach?logs=1&stream=1&stdout=1" {:as :stream}))
(delete-container "502f3f29c45b")
(containers)
(container "bee8e0cbeda")
(:body (client/post "http://localhost:4243/containers/bee8e0cbeda/attach?logs=1&stream=1&stdout=1" {:as :stream}))
(def stream (:body (client/post "http://localhost:4243/containers/bee8e0cbeda/attach?logs=1&stream=1&stdout=1" {:as :stream})))
(available stream)
(.available stream)
(.read stream)
(char (.read stream))
(.available stream)
(char (.read stream))
(.available stream)
(str (.read stream (byte-array 8085)))
(char (.read stream))
(.read stream (byte-array 8000))
(.available stream)
(def barray (byte-array 191))
barray
(.read stream barray)
barray
(str barray)
(apply str (map char barray))
(.available stream)
(start-container "bee8e0cbeda")
(def stream (:body (client/post "http://localhost:4243/containers/bee8e0cbeda/attach?logs=1&stream=1&stdout=1" {:as :stream})))
(.available stream)
(containers)
(container "bee8e0cbeda")
(def test (:body (client/post "http://localhost:4243/containers/bee8e0cbeda/attach?log=1&stream=1 {:as :stream})))
"
)
(def test (:body (client/post "http://localhost:4243/containers/bee8e0cbeda/attach?log=1&stream=1" {:as :stream})))
(.available test)
(apply str (map char (.read test (byte-array 67))))
(def bytes (byte-array 67))
bytes
(.read test bytes)
(apply str (map char bytes))
bytes
(map char bytes)
(container "bee8e0cbeda")
(start-container "bee8e0cbeda")
(containers)
(container "bee8e0cbeda")
(start-container "bee8e0cbeda")
(container "bee8e0cbeda")
(start-container "bee8e0cbeda")
(container "bee8e0cbeda")
(start-container "bee8e0cbeda")
(container "bee8e0cbeda")
(requrie [reno-2.projects :as project])
(require '[reno-2.projects :as project])
(project/build {:type "hem" :s3-bucket "ubret/test-serengeti"} {:s3-url "https://github.com/zooniverse/Serengeti/tarball/master"})
(require '[reno-2.projects :as project] :reload)
(project/build {:type "hem" :s3-bucket "ubret/test-serengeti"} {:s3-url "https://github.com/zooniverse/Serengeti/tarball/master"})
(use 'container-ship.core)
(start-cotainer "afe572ecb580")
(start-container "afe572ecb580")
(wait-container "afe572ecb580")
